apply plugin: 'maven-publish'

def cmakeListsContent = file("$rootProject.projectDir/../CMakeLists.txt").text
def versionName = (cmakeListsContent =~ /project\(ntgcalls.*VERSION ([\d.]+).*\)/)[0][1]
def versionComponents = versionName.tokenize('.')
def major = versionComponents[0].toInteger()
def minor = versionComponents[1].toInteger()
def patch = versionComponents.size() > 2 ? versionComponents[2].toInteger() : 0
def isBeta = versionComponents.size() == 4
def versionCode = (major * 100000 + minor * 1000 + patch * 100)

if (isBeta) {
    def betaNumber = versionComponents[3].toInteger()
    versionCode += betaNumber
} else {
    versionCode += 100
}

versionName = versionComponents.take(3).join('.')
if (isBeta) {
    versionName += "-beta${versionComponents[3]}"
}

android {
    defaultConfig {
        buildConfigField 'int', 'VERSION_CODE', "${versionCode}"
        buildConfigField 'String', 'VERSION_NAME', "\"${versionName}\""
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifactId = "ntgcalls"
                from components.release
                groupId = 'io.github.pytgcalls'
                version = versionName
                
                pom {
                    name.set("ntgcalls")
                    description.set("A Native Implementation of Telegram Calls in a seamless way.")
                    url.set("https://github.com/pytgcalls/ntgcalls")

                    licenses {
                        license {
                            name.set("GNU Lesser General Public License v3.0")
                            url.set("https://www.gnu.org/licenses/lgpl-3.0.html")
                            distribution.set("repo")
                        }
                    }

                    developers {
                        developer {
                            id.set("Laky-64")
                            name.set("Matteo Iraci")
                            email.set("iraci.matteo@gmail.com")
                        }
                    }

                    scm {
                        connection.set("scm:git:git://github.com/pytgcalls/ntgcalls.git")
                        developerConnection.set("scm:git:ssh://github.com/pytgcalls/ntgcalls.git")
                        url.set("https://github.com/pytgcalls/ntgcalls")
                    }
                }
            }
        }
    }
}